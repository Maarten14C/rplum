load_all(rp)
Plum()
load_all(rp)
Plum()
rp
install(rp)
Plum()
q()
require(rplum)
Plum()
install(rp)
require(devtools)
install(rp)
Plum()
q()
require(rplum)
Plum()
require(rplum)
install(rp)
require(devtools)
install(rp)
Plum()
q()
rp
require(devtools)
reload(rp)
Plum()
require(rplum)
Plum()
sessionInfo()
reload(rp)
Plum()
Plum(, older.than=4)
Plum(, older.than=40)
Plum(, older.than=20)
reload(rp)
reload(rp)
Plum(, older.than=20)
reload(rp)
Plum(, older.than=20)
reload(rp)
Plum(, older.than=20)
install(rp)
reload(rp)
load_all(rp)
Plum(, older.than=20)
load_all(rp)
Plum(, older.than=20)
Plum()
Plum(, older.than=20)
Plum("LL14", older.than=20)
Plum("LL14", otherdates="LL14_14C.csv")
load_all(rp)
Plum("LL14", otherdates="LL14_14C.csv")
Plum("LL14", otherdates="LL14_14C.csv", older.than=2)
load_all(rp)
load_all(rp)
Plum("LL14", otherdates="LL14_14C.csv", older.than=2)
load_all(rp)
Plum("LL14", otherdates="LL14_14C.csv", older.than=2)
load_all(rp)
Plum("LL14", otherdates="LL14_14C.csv", older.than=2)
load_all(rp)
Plum("LL14", otherdates="LL14_14C.csv", older.than=2)
load_all(rp)
Plum("LL14")
Plum("LL14")
load_all(rp)
Plum("LL14")
Plum("LL14", d.max=70)
info$d.max
info$depths
info$elbows
info$K
info$background
info$dets
info$detsOrig
load_all(rp)
Plum("LL14", d.max=70)
load_all(rb)
rb <- "~/Dropbox/devsoftware/rbacon"
load_all(rb)
Plum("LL14", d.max=70)
q()
require(devtools)
require(rplum)
load_all(rp)
)
require(rplum)
load_all(rp)
Plum("LL14", d.max=70)
Plum("LL14", d.max=70, remove.tail=F))
Plum("LL14", d.max=70, remove.tail=F)
load_all(rp)
Plum("LL14", d.max=70, remove.tail=F)
rb
load_all(rb)
q()
require(devtools)
load_all(rb)
require(rbacon)
load_all(rb)
q()
load_all(rb)
require(rbacon)
require(devtools)
load_all(rb)
install(rb)
Plum("LL14", d.max=70, remove.tail=F)
require(rplum)
load_all(rp)
Plum("LL14", d.max=70, remove.tail=F)
Plum("LL14", d.max=70, remove.tail=T)
Plum("LL14", d.max=70)
Plum("LL14", otherdates="LL14_14C.csv"))
Plum("LL14", otherdates="LL14_14C.csv")
Plum("LL14", otherdates="LL14_14C.csv", remove.tail=F)
Plum("LL14", otherdates="LL14_14C.csv")
info$detsBacon
Plum("LL14", d.max=70, remove.tail=T)
Plum("LL14", d.max=70, remove.tail=T)
Plum("LL14", otherdates="LL14_14C.csv")
load_all(rp)
load_all(rp)
Plum("LL14", otherdates="LL14_14C.csv")
info$detsBacon
Plum("LL14", otherdates="LL14_14C.csv")
load_all(rp)
Plum("LL14", otherdates="LL14_14C.csv")
load_all(rp)
Plum("LL14", otherdates="LL14_14C.csv")
info$dets
info$detsOrig
load_all(rp)
Plum("LL14", otherdates="LL14_14C.csv")
load_all(rp)
Plum("LL14", otherdates="LL14_14C.csv")
max(info$detsBacon[,4])
max(info$detsOrig[,2])
load_all(rp)
Plum("LL14", otherdates="LL14_14C.csv")
load_all(rp)
Plum("LL14", otherdates="LL14_14C.csv")
agedepth(d.max==100)
agedepth(d.max==100)
agedepth(d.max=100)
agedepth(d.max=100, remove.tail=F)
agedepth(d.max=100, remove.tail=FF)
agedepth(d.max=100, remove.tail=F)
agedepth(d.max=100, remove.tail=T)
load_all(rb)
q()
require(rplum)
Plum("LL14", otherdates="LL14_14C.csv")
agedepth(remove.tail=F)
load_all(rp)
require(devtools)
load_all(rp)
agedepth(remove.tail=F)
Plum("LL14", otherdates="LL14_14C.csv")
agedepth()
info$hasBaconData
info$background
info$dets
info$detsBacon
info$dets
info$dets[,4]
info$detsBacon
load_all(rb)
q()
getwd()
rb
require(devtools)
load_all(rb)
install(rb)
require(rplum)
agedepth()
load_all(rb)
install(rb)
agedepth()
require(rplum)
load_all(rp)
install(rb)
q()
q()
require(devtools)
install_github('maarten14C/rplum')
sessionInfo()
require(rplum)
sessionInfo()
Plum()
Plum(, boundary=20)
calibrate(400,40)
calibrate(300,40)
calibrate(300,40, BCAD=T)
abline(v=seq(1400, 2000, by=50))
q()
rp
update.packages()
require(devtools)
q()
require(rplum)
Plum(core = "TAS1110", otherdates="TAS1110_14C.csv", acc.mean=20)
rp
require(devtools)
build(rp)
q()
install.packages('rplum')
Plum(core = "TAS1110", acc.mean=20)
require(rplum)
sessionInfo()
devtools::install_version('rplum', version='0.4.0')
Plum(core = "TAS1110", acc.mean=20)
q()
require(rplum)
Plum(core = "TAS1110", acc.mean=20)
Plum(core = "TAS1110", acc.mean=20)
Plum(core = "TAS1110", acc.mean=20)
Plum.cleanup()
Plum(core = "TAS1110", acc.mean=20)
getwd()
rp
require(devtools)
load_all(rp)
Plum(core = "TAS1110", acc.mean=20)
getwd()
Plum()
Plum(n.supp=3)
Plum(n.supp=c())
load_all(rp)
Plum(n.supp=c())
load_all(rp)
Plum(n.supp=c())
Plum(n.supp=0)
load_all(rp)
Plum(n.supp=0)
mynsupp
Plum(n.supp=c())
load_all(rp)
Plum(n.supp=c())
load_all(rp)
Plum(n.supp=c())
Plum(n.supp=c())
Plum(n)
Plum()
load_all(rp)
Plum()
load_all(rp)
Plum()
load_all(rp)
Plum()
Plum(ra.case=0)
load_all(rp)
Plum(ra.case=0)
load_all(rp)
Plum(ra.case=0)
load_all(rp)
Plum(ra.case=0)
Plum()
Plum("TAS1110")
Plum("TAS1110", otherdates="TAS2110_14C.csv")
Plum("TAS1110", otherdates="TAS1110_14C.csv")
load_all(rp)
Plum("TAS1110", otherdates="TAS1110_14C.csv")
check()
check(rp)
document(rp)
check(rp)
document(rp)
check(rp)
build(rp)
check_win_devel(rp)
agedepth
calib.plot
build(rp)
document(rp)
build_vignettes(rp)
Plum(ask=FALSE, suggest=FALSE, ssize=100, coredir=tempdir())
Plum(ask=FALSE, suggest=FALSE, ssize=100, coredir=tempdir())
check_win_devel(rp)
build(rp)
build_vignettes(rp)
build(rp)
document(rp)
build(rp)
check_win_devel(rp)
install(rp)
build(rp)
document(rp)
q()
require(rbacon)
sessionInfo()
install.packages(rplum)
install.packages('rplum')
require(rplum)
Plum()
?Plum()
       Plum(ask=FALSE, ssize=1000, coredir=tempfile(), date.sample=2018.5, ra.case=0, n.supp=3)
rp
require(devtools)
install(rp)
       Plum(ask=FALSE, ssize=1000, coredir=tempfile(), date.sample=2018.5, ra.case=0, n.supp=3)
q()
require(rplum)
Plum()
accrate.depth.summary(5)
accrate.age.summary(100)
accrate.age.summary(10)
accrate.age.summary(-10)
accrate.age.summary(-50)
accrate.age.summary(-500)
accrate.age.summary(-50)
accrate.age.summary(-60)
accrate.age.summary(-70)
accrate.age.summary(-65)
accrate.age.summary(-66)
accrate.age.summary(-67)
accrate.age.summary
accrate.age
?accrate.age
accrate.age
sessionInfo
sessionInfo()
rp
require(devtools)
install(ri)
install(rp)
q()
require(devtools)
check(rp)
q()
rp
require(devtools)
check(rp)
check(rp)
q()
require(rplum)
Plum()
q()
require(rplum)
Plum()
require(rbacon)
Plum()
Plum()
info$dets
install(rb)
rb
require(devtools)
install(rb)
load_all(rp)
clean_dll(rb)
load_all()
install(rp)
Plum()
require(rplum)
Plum()
q()
require(devtools)
check(rp)
Plum()
Plum(save.info=T)
require(devtools)
load_all(rb)
load_all(rp)
Plum()
load_all(rp)
Plum(ask=F, ssize=100)
load_all(rp)
Plum(ask=F, ssize=100)
scissors
load_all(rp)
Plum(ask=F, ssize=100)
check(rp)
install(rp)
install(rp)
install(rp)
rhub::rhub_check(rp)
getwd()
setwd("~/Dropbox/devsoftware/rplum")
rhub::rhub_check()
getwd()
rhub::rhub_check()
load_all()
require(rbacon)
load_all()
q(0
y
q()
ls()
rm(list=ls())
ls()
gc()
update.packages()
require(devtools)
build()
install()
check()
document()
document()
check()
document()
document()
check()
document()
document()
check()
document()
document()
document()
check()
check()
document()
document()
check()
rhub::rhub_check()
version
build()
document()
install()
build()
check()
install()
document()
getwd()
q()
require(devtools)
build()
install()
check()
build()
document()
build()
document()
document()
build()
check()
install()
build_vignettes()
rhub::rhub_check()
ls()
install()
rhub::rhub_check()
document()
build()
check()
rhub::rhub_check()
is.infinite(-9)
is.infinite(-Inf)
document()
check()
release()
180-54
180-54-90
install.packages('worldclim')
library(climateR)
install.packages('climateR')
install.packages('climate')
require(climate)
ns = nearest_stations_ogimet(country = "Greece")
ns
df = meteo_noaa_hourly(station =16641)
df = meteo_noaa_hourly(station =16641, allow_failure=F)
df = meteo_noaa_hourly(station ="Florina", allow_failure=F)
curve_colors <- c("Lognormal" = "blue", "Gamma" = "red")
# Create a sequence of x values
x <- seq(0, 10, length.out = 500)
# Lognormal parameters
mu <- 0
sigma <- 0.5
# Gamma parameters
shape <- 2
rate <- 1
# Calculate densities
lognormal_density <- dlnorm(x, meanlog = mu, sdlog = sigma)
gamma_density <- dgamma(x, shape = shape, rate = rate)
# Plot
plot(x, lognormal_density, type = "l", col = curve_colors["Lognormal"],
     lwd = 2, ylim = c(0, max(lognormal_density, gamma_density)),
     ylab = "Density", xlab = "x",
     main = "Comparison: Lognormal vs Gamma distributions")
lines(x, gamma_density, col = curve_colors["Gamma"], lwd = 2, lty = 2)
# Add a legend
legend("topright", legend = names(curve_colors), 
       col = curve_colors, lwd = 2, lty = c(1,2))
# Set up plotting
curve_colors <- c("Lognormal" = "blue", "Gamma" = "red")
# Create x values
x <- seq(0, 10, length.out = 500)
# Set parameters so that means are similar
# Lognormal parameters
mu <- log(2)  # so that median ~2
sigma <- 0.5
# Gamma parameters
# Mean of gamma = shape / rate
shape <- 4
rate <- 2  # so mean = shape/rate = 2
# Calculate densities
lognormal_density <- dlnorm(x, meanlog = mu, sdlog = sigma)
gamma_density <- dgamma(x, shape = shape, rate = rate)
# Plot
plot(x, lognormal_density, type = "l", col = curve_colors["Lognormal"],
     lwd = 2, ylim = c(0, max(lognormal_density, gamma_density)),
     ylab = "Density", xlab = "x",
     main = "Lognormal vs Gamma (similar means)")
lines(x, gamma_density, col = curve_colors["Gamma"], lwd = 2, lty = 2)
# Add a legend
legend("topright", legend = names(curve_colors), 
       col = curve_colors, lwd = 2, lty = c(1,2))
6320.70+1099.80
nl23 asnb 8821 0838 45q()
y
q()
